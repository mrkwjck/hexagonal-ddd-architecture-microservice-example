<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.3</version>
		<relativePath/>
	</parent>

	<groupId>mrkwjck</groupId>
	<artifactId>hex-ddd-arch-example</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>hexagonal-ddd-architecture-example</name>
	<description>Hexagonal DDD architecture microservice example</description>

	<properties>
		<java.version>21</java.version>
		<spring-cloud.version>2024.0.0</spring-cloud.version>
		<lombok.version>1.18.34</lombok.version>
		<lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
		<iban4j.version>3.2.10-RELEASE</iban4j.version>
		<spock.version>2.4-M5-groovy-4.0</spock.version>
		<gmavenplus.version>3.0.2</gmavenplus.version>
		<mapstruct.version>1.6.3</mapstruct.version>
		<postgresql-driver.version>42.7.5</postgresql-driver.version>
		<archunit.version>1.1.0</archunit.version>
		<testcontainers-postgresql.version>1.20.5</testcontainers-postgresql.version>
		<spotless.version>2.44.3</spotless.version>
		<jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
		<gmavenplus-plugin.version>4.1.1</gmavenplus-plugin.version>
		<maven-surefire-plugin.version>3.5.2</maven-surefire-plugin.version>
		<maven-failsafe-plugin.version>3.5.2</maven-failsafe-plugin.version>

		<skip-unit-tests>false</skip-unit-tests>
		<skip-integration-tests>false</skip-integration-tests>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-binder-kafka</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok-mapstruct-binding</artifactId>
			<version>${lombok-mapstruct-binding.version}</version>
		</dependency>
		<dependency>
			<groupId>org.iban4j</groupId>
			<artifactId>iban4j</artifactId>
			<version>${iban4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql-driver.version}</version>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
			<version>${liquibase.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-contract-stub-runner</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-test-binder</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.spockframework</groupId>
			<artifactId>spock-core</artifactId>
			<version>${spock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.spockframework</groupId>
			<artifactId>spock-spring</artifactId>
			<version>${spock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.tngtech.archunit</groupId>
			<artifactId>archunit</artifactId>
			<version>${archunit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.tngtech.archunit</groupId>
			<artifactId>archunit-junit5</artifactId>
			<version>${archunit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<version>${testcontainers-postgresql.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>21</source>
					<target>21</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>${lombok-mapstruct-binding.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<!-- Code Coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>pre-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>post-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report-integration</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.80</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Code style verification -->
			<plugin>
				<groupId>com.diffplug.spotless</groupId>
				<artifactId>spotless-maven-plugin</artifactId>
				<version>${spotless.version}</version>
				<configuration>
					<java>
						<importOrder />
						<removeUnusedImports/>
						<indent>
							<spaces>true</spaces>
							<spacesPerTab>4</spacesPerTab>
						</indent>
						<palantirJavaFormat />
					</java>
					<lineEndings>UNIX</lineEndings>
				</configuration>
				<executions>
					<execution>
						<!-- Runs in compile phase to fail fast in case of formatting issues.-->
						<id>spotless-check</id>
						<phase>compile</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Test -->
			<plugin>
				<groupId>org.codehaus.gmavenplus</groupId>
				<artifactId>gmavenplus-plugin</artifactId>
				<version>${gmavenplus-plugin.version}</version>
				<configuration>
					<parameters>true</parameters>
					<testSources>
						<testSource>
							<directory>${project.basedir}/src/test/groovy</directory>
							<includes>
								<include>**/*.groovy</include>
							</includes>
						</testSource>
						<testSource>
							<directory>${project.basedir}/src/integration-test/groovy</directory>
							<includes>
								<include>**/*.groovy</include>
							</includes>
						</testSource>
					</testSources>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>addTestSources</goal>
							<goal>compileTests</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<testClassesDirectory>${basedir}/target/test-classes</testClassesDirectory>
					<testSourceDirectory>${basedir}/src/test/groovy</testSourceDirectory>
					<includes>
						<include>**/*Test.class</include>
					</includes>
					<excludes>
						<exclude>**/*mrkwjck.IntegrationTest.class</exclude>
					</excludes>
					<testFailureIgnore>false</testFailureIgnore>
					<skipTests>${skip-unit-tests}</skipTests>
					<trimStackTrace>false</trimStackTrace>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-failsafe-plugin.version}</version>
				<configuration>
					<systemPropertyVariables>
						<spring.cloud.kubernetes.enabled>false</spring.cloud.kubernetes.enabled>
					</systemPropertyVariables>
				</configuration>
				<executions>
					<execution>
						<id>integration-test</id>
						<phase>integration-test</phase>
						<configuration>
							<classesDirectory>${project.build.outputDirectory}</classesDirectory>
							<testClassesDirectory>${basedir}/target/integration-test-classes</testClassesDirectory>
							<testSourceDirectory>${basedir}/src/integration-test/groovy</testSourceDirectory>
							<includes>
								<include>**/*mrkwjck.IntegrationTest.class</include>
							</includes>
							<excludes>
								<exclude>**/*Test.class</exclude>
							</excludes>
							<skipTests>${skip-integration-tests}</skipTests>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
